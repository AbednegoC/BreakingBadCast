{"version":3,"sources":["img/logo.png","img/spinner.gif","components/UI/SiteLogo.js","components/characters/CharacterItems.js","components/UI/Spinner.js","components/characters/CharacterGrid.js","components/UI/Search.js","components/UI/ShowInfo.js","App.js","index.js"],"names":["module","exports","SiteLogo","className","src","logo","alt","CharacterItems","character","death","img","name","portrayed","nickname","status","occupation","join","Spinner","spinner","style","width","margin","display","CharacterGrid","characters","isLoading","charDeath","map","key","char_id","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","ShowInfo","App","setCharacters","setCharDeath","setIsLoading","query","setQuery","useEffect","a","axios","charInfo","charDeathInfo","all","then","spread","b","console","log","data","fetchData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,qMCa5BC,EATE,WACb,OAEI,4BAAQC,UAAU,QACd,yBAAKC,IAAKC,IAAMC,IAAI,OCkBjBC,EAvBQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,UAAsB,EAAXC,MACjC,OACI,yBAAKN,UAAU,QACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,cACX,yBAAKC,IAAKI,EAAUE,IAAKJ,IAAI,oBAEjC,yBAAKH,UAAU,aACX,4BAAKK,EAAUG,MACf,4BACI,4BAAI,gDAA8BH,EAAUI,WAC5C,4BAAI,8CAA4BJ,EAAUK,UAC1C,4BAAI,4CAA0BL,EAAUM,QACxC,4BAAI,gDAA8BN,EAAUO,WAAWC,KAAK,Y,iBCLrEC,EARC,WAEZ,OAEI,yBAAKb,IAAKc,IAASC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,QAAS,SAAWhB,IAAI,gBCU5EiB,EAZO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,UAA0B,EAAfC,UAC5C,OAAOD,EACH,kBAAC,EAAD,MAEI,6BAAStB,UAAU,SACdqB,EAAWG,KAAI,SAACnB,GAAD,OACZ,kBAAC,EAAD,CAAgBoB,IAAKpB,EAAUqB,QAASrB,UAAWA,SC2BxDsB,EAnCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAGLC,mBAAS,IAHJ,mBAGtBC,EAHsB,KAGhBC,EAHgB,KAU7B,OAEI,6BAAS/B,UAAU,UACf,8BAGI,2BACIgC,KAAK,OACLhC,UAAU,eACViC,YAAY,sCACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAhBRC,EAgBwBD,EAAEE,OAAOJ,MAf/CH,EAAQM,QACRT,EAASS,GAFI,IAACA,GAiBFE,WAAS,KAIlB,6BAASvC,UAAU,WACf,4ECbAwC,EAdE,WACf,OACE,6BAASxC,UAAU,YACjB,gdCsDSyC,G,MAjDH,WAAM,MAEoBZ,mBAAS,IAF7B,mBAETR,EAFS,KAEGqB,EAFH,OAIkBb,mBAAS,IAJ3B,mBAITN,EAJS,KAIEoB,EAJF,OAOkBd,oBAAS,GAP3B,mBAOTP,EAPS,KAOEsB,EAPF,OAUUf,mBAAS,IAVnB,mBAUTgB,EAVS,KAUFC,EAVE,KAuChB,OA1BAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,sEAGOC,IAAM,sDAAD,OAAuDJ,IAHnE,cAGVK,EAHU,gBAIYD,IAAM,6CAJlB,OAIVE,EAJU,OAOhBF,IAAMG,IAAI,CAACF,EAAUC,IAAgBE,KACnCJ,IAAMK,QAAO,WACX,IAAMN,EAAC,wCACDO,EAAC,wCACPC,QAAQC,IAAIT,EAAEU,MACdF,QAAQC,IAAIF,EAAEG,MACdhB,EAAcM,EAAEU,MAChBf,EAAaY,EAAEG,MACfd,GAAa,OAfD,2CAAH,qDAoBfe,KAGC,CAACd,IAGF,yBAAK7C,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQ4B,SAAU,SAACS,GAAD,OAAOS,EAAST,MAClC,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAef,UAAWA,EAAWD,WAAYA,EAAYE,UAAWA,OCnD9EqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.45baaac8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3795f66d.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";","// Simple component for site logo:\nimport React from 'react'\nimport logo from '../../img/logo.png'\n\nconst SiteLogo = () => {\n    return (\n        // JSX that renders our logo img:\n        <header className=\"Logo\">\n            <img src={logo} alt='' />\n        </header>\n    )\n}\n\nexport default SiteLogo\n","import React from 'react'\n\n// Passing in a 'character' and 'death' as props\nconst CharacterItems = ({ character, death}) => {\n    return (\n        <div className='card'>\n            <div className='card-inner'>\n                <div className='card-front'>\n                    <img src={character.img} alt='Actor Portrait' />\n                </div>\n                <div className='card-back'>\n                    <h1>{character.name}</h1>\n                    <ul>\n                        <li><strong>Actor Name: </strong>{character.portrayed}</li>\n                        <li><strong>Nickname: </strong>{character.nickname}</li>\n                        <li><strong>Status: </strong>{character.status}</li>\n                        <li><strong>Occupation: </strong>{character.occupation.join(', ')}</li>\n                        {/* <li><strong>Death: </strong>{death.cause}</li> */}\n                    </ul>\n                </div>\n            </div>\n        </div>\n       \n    )\n}\n\nexport default CharacterItems\n","import React from 'react'\nimport spinner from '../../img/spinner.gif'\n\nconst Spinner = () => {\n    // Import and render spinner gif\n    return (\n        // spinner props\n        <img src={spinner} style={{ width: '50px', margin: 'auto', display: 'block' }} alt='Loading...' />\n    )\n}\n\nexport default Spinner\n","import React from 'react'\nimport CharacterItems from './CharacterItems'\nimport Spinner from '../UI/Spinner'\n\n// Passing in our characters and isLoading as props\nconst CharacterGrid = ({ characters, isLoading, charDeath}) => {\n    return isLoading ? (\n        <Spinner />\n    ) : (\n            <section className='cards'>\n                {characters.map((character) => (\n                    <CharacterItems key={character.char_id} character={character}></CharacterItems>\n                ))}\n            </section>\n        )\n}\n\nexport default CharacterGrid \n","// Using 'useState' since our search component uses a form and every input in the form usually has its own state.\nimport React, { useState } from 'react'\n\nconst Search = ({ getQuery }) => {\n\n    // Create our local piece of state:\n    const [text, setText] = useState('')\n    \n    const onChange = (q) => {\n        setText(q)\n        getQuery(q)\n    }\n\n    return (\n        //  Simple form:\n        <section className='search'>\n            <form>\n                {/* 'input' is a control component, which is why we have an 'onChange' event in the form */}\n                {/* onChange will trigger whenever something is typed/deleted in form */}\n                <input\n                    type='text'\n                    className='form-control'\n                    placeholder=' 🔍 Search a character...'\n                    value={text}\n                    onChange={(e) => onChange(e.target.value)}\n                    autoFocus\n                />\n            </form>\n\n           <section className='warning'>\n               <h4>* Warning: this site contains spoilers! *</h4>\n           </section>\n\n        </section>\n       \n    )\n}\n\nexport default Search\n","// Somple component for site's show info. section:\nimport React from \"react\";\n\nconst ShowInfo = () => {\n  return (\n    <section className=\"showInfo\">\n      <p>\n        Breaking Bad is a popular American neo-Western crime drama television\n        series created and produced by Vince Gilligan. This show aired on AMC from January 20, 2008\n        to September 29, 2013, consisting of five season with a total of 62 episodes. Breaking Bad is set in\n        Albuquerque, New Mexico and tells the incredibly transformative story of Walter White who goes from innocent \n        high school chemistry teacher to the infamous 'Heisenberg'.\n      </p>\n    </section>\n  );\n};\n\nexport default ShowInfo;\n","// Using react hooks to create functional components:\n// 1) useState is used within functional components.\n// 2) useEffect is used to trigger when a component loads to make a HTTP req to get data (i.e: name, img, etc.)\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SiteLogo from \"./components/UI/SiteLogo\";\nimport CharacterGrid from \"./components/characters/CharacterGrid\";\nimport Search from \"./components/UI/Search\";\nimport ShowInfo from \"./components/UI/ShowInfo\";\nimport \"./App.css\";\n\nconst App = () => {\n  // UseState [Characters]: Our Breaking Bad characters from API. setChars is used to manipulate state.\n  const [characters, setCharacters] = useState([]);\n\n  const [charDeath, setCharDeath] = useState([]);\n\n  // Represents/Checks whether our API data is loading & has loaded.\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Represents whatever our current 'Search' query is (aka whatever is typed in the 'Search' form).\n  const [query, setQuery] = useState(\"\");\n\n  // Make a request using axios:\n  useEffect(() => {\n    const fetchData = async () => {\n\n      // Data that we will receive from our axios request: B.B Char Info + B.B Char Death Info\n      const charInfo = await axios(`https://www.breakingbadapi.com/api/characters?name=${query}`);\n      const charDeathInfo = await axios(\"https://www.breakingbadapi.com/api/deaths\");\n\n      // Attempting to utilize multiple API request:\n      axios.all([charInfo, charDeathInfo]).then(\n        axios.spread((...allData) => {\n          const a = allData[0];\n          const b = allData[1];\n          console.log(a.data);\n          console.log(b.data);\n          setCharacters(a.data);\n          setCharDeath(b.data);\n          setIsLoading(false);\n        })\n      );\n    };\n    // Retrieve API data:\n    fetchData();\n\n    // '[query]' is a dependency that constantly updates our 'Search' query w/ the help of getQuery() + props\n  }, [query]);\n\n  return (\n    <div className=\"app\">\n      <SiteLogo />\n      <Search getQuery={(q) => setQuery(q)} />\n      <ShowInfo />\n      <CharacterGrid isLoading={isLoading} characters={characters} charDeath={charDeath} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}